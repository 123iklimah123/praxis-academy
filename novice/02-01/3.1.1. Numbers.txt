Microsoft Windows [Version 10.0.22000.856]
(c) Microsoft Corporation. All rights reserved.

C:\Users\ASUS>python
Python 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> the_world_is_flat = True
>>> if the_world_is_flat:
... print("Be careful no to fall off!)
  File "<stdin>", line 2
    print("Be careful no to fall off!)
    ^
IndentationError: expected an indented block after 'if' statement on line 1
>>> if the_world_is_flat:
... print("Be careful not to fall off!")
  File "<stdin>", line 2
    print("Be careful not to fall off!")
    ^
IndentationError: expected an indented block after 'if' statement on line 1
>>> if the_world_is_flat:
...     print ("Be careful not to fall off!")
...
Be careful not to fall off!
>>> # this is the first command
>>> # this is the first commant
>>> spam = 1 # andthis is the second comment
>>> text = "# this is not a comment because it's inside quotes."
>>> print(spam)
1
>>> print(text)
# this is not a comment because it's inside quotes.
>>> 2 + 2
4
>>> 50 - 5*6
20
>>> (50-5*6)/4
5.0
>>> 8/5 # division always returns a floating point number
1.6
>>> 17/3 #classic division return a float
5.666666666666667
>>> 17//3 #floor division discards the fractional part
5
>>> 17%3 # the % operator returns the remainder of the division
2
>>> 5 * 3 + 2  # floored quotient * divisor + remainder
17
>>>  5 ** 2  # 5 squared
  File "<stdin>", line 1
    5 ** 2  # 5 squared
IndentationError: unexpected indent
>>> 5 ** 2  # 5 squared
25
>>> 2 ** 7  # 2 to the power of 7
128
>>> 4 * 3.75 - 1
14.0
>>> tax = 12.5 / 100
>>> price = 100.50
>>> price * tax
12.5625
>>> price + _
113.0625
>>> round(_, 2)
113.06
>>> 'spam eggs'  # single quotes
'spam eggs'
>>> 'doesn\'t'  # use \' to escape the single quote...
"doesn't"
>>>  '"Yes," they said.'
  File "<stdin>", line 1
    '"Yes," they said.'
IndentationError: unexpected indent
>>>  '\"Yes,\" they said.'
  File "<stdin>", line 1
    '\"Yes,\" they said.'
IndentationError: unexpected indent
>>> '"Yes," they said.
  File "<stdin>", line 1
    '"Yes," they said.
    ^
SyntaxError: unterminated string literal (detected at line 1)
>>> '"Yes," they said.'
'"Yes," they said.'
>>> "\"Yes,\" they said."
'"Yes," they said.'
>>> '"Isn\'t," they said.'
'"Isn\'t," they said.'
>>> '"Isn\'t," they said.'
'"Isn\'t," they said.'
>>> print('"Isn\'t," they said.')
"Isn't," they said.
>>> s = 'First line.\nSecond line.'  # \n means newline
>>> s  # without print(), \n is included in the output
'First line.\nSecond line.'
>>> print(s)  # with print(), \n produces a new line
First line.
Second line.
>>> print('C:\some\name')  # here \n means newline!
C:\some
ame
>>> print(r'C:\some\name')  # note the r before the quote
C:\some\name
Usage: thingy [OPTIONS]
     -h                        Display this usage message
     -H hostname    
>>> # 3 times 'un', followed by 'ium'
>>> 3 * 'un' + 'ium'
'unununium'
>>> 'Py' 'thon'
'Python'
>>> text = ('Put several strings within parentheses '
... 'to have them joined together.')
>>>  text
  File "<stdin>", line 1
    text
IndentationError: unexpected indent
>>> text
'Put several strings within parentheses to have them joined together.'
>>> prefix = 'Py'
>>> prefix 'thon'  # can't concatenate a variable and a string literal
  File "<stdin>", line 1
    prefix 'thon'  # can't concatenate a variable and a string literal
           ^^^^^^
SyntaxError: invalid syntax
>>> prefix + 'thon'
'Python'
>>> word = 'Python'
>>> word[0]  # character in position 0
'P'
>>> word[5]  # character in position 5
'n'
>>> word[-1]  # last character
'n'
>>> word[-2]  # second-last character
'o'
>>> word[-6]
'P'
>>> word[0:2]  # characters from position 0 (included) to 2 (excluded)
'Py'
>>> word[2:5]  # characters from position 2 (included) to 5 (excluded)
'tho'
>>> word[:2]   # character from the beginning to position 2 (excluded)
'Py'
>>> word[4:]   # characters from position 4 (included) to the end
'on'
>>> word[-2:]  # characters from the second-last (included) to the end
'on'
>>> word[:2] + word[2:]
'Python'
>>> word[:4] + word[4:]
'Python'
>>>  word[42]  # the word only has 6 characters
  File "<stdin>", line 1
    word[42]  # the word only has 6 characters
IndentationError: unexpected indent
>>> word[42]  # the word only has 6 characters
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> word[4:42]
'on'
>>> word[42:]
''
>>> word[0] = 'J'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> word[2:] = 'py'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> 'J' + word[1:]
'Jython'
>>> word[:2] + 'py'
'Pypy'
>>> s = 'supercalifragilisticexpialidocious'
>>> len(s)
34
>>> squares = [1, 4, 9, 16, 25]
>>> squares
[1, 4, 9, 16, 25]
>>> squares[0]  # indexing returns the item
1
>>> squares[-1]
25
>>> squares[-3:]  # slicing returns a new list
[9, 16, 25]
>>> squares[:]
[1, 4, 9, 16, 25]
>>> squares + [36, 49, 64, 81, 100]
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
>>> cubes = [1, 8, 27, 65, 125]  # something's wrong here
>>> >>> 4 ** 3  # the cube of 4 is 64, not 65!
  File "<stdin>", line 1
    >>> 4 ** 3  # the cube of 4 is 64, not 65!
    ^^
SyntaxError: invalid syntax
>>> cubes = [1, 8, 27, 65, 125]  # something's wrong here
>>> 4 ** 3  # the cube of 4 is 64, not 65!
64
>>>

C:\Users\ASUS>cubes[3] = 64  # replace the wrong valuecubes[3] = 64  # replace the wrong value
'cubes[3]' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>python
Python 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> cubes[3] = 64  # replace the wrong value
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cubes' is not defined
>>> cubes = [1, 8, 27, 65, 125]  # something's wrong here
>>> 4 ** 3  # the cube of 4 is 64, not 65!
64
>>> cubes[3] = 64  # replace the wrong value
>>> cubes
[1, 8, 27, 64, 125]
>>> cubes.append(216)  # add the cube of 6
>>> cubes.append(7 ** 3)  # and the cube of 7
>>> cubes
[1, 8, 27, 64, 125, 216, 343]
>>> letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g']
>>> letters
['a', 'b', 'c', 'd', 'e', 'f', 'g']
>>> # replace some values
>>> letters[2:5] = ['C', 'D', 'E']
>>> letters
['a', 'b', 'C', 'D', 'E', 'f', 'g']
>>> # now remove them
>>> letters[2:5] = []
>>> letters
['a', 'b', 'f', 'g']
>>> # clear the list by replacing all the elements with an empty list
>>> letters[:] = []
>>> letters
[]
>>> letters = ['a', 'b', 'c', 'd']
>>>
KeyboardInterrupt
>>> len(letters)
4
>>> a = ['a', 'b', 'c']
>>>  n = [1, 2, 3]
  File "<stdin>", line 1
    n = [1, 2, 3]
IndentationError: unexpected indent
>>>
KeyboardInterrupt
>>> x = [a, n]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'n' is not defined
>>> a = ['a', 'b', 'c']
>>> n = [1, 2, 3]
>>> x = [a, n]
>>> x
[['a', 'b', 'c'], [1, 2, 3]]
>>> x[0]
['a', 'b', 'c']
>>> x[0][1]
'b'
>>> # Fibonacci series:
>>> ... # the sum of two elements defines the next
Ellipsis
>>> ... a, b = 0, 1
  File "<stdin>", line 1
    ... a, b = 0, 1
        ^
SyntaxError: invalid syntax
>>> # Fibonacci series:
>>>
>>> while a < 10:
... print(a)
  File "<stdin>", line 2
    print(a)
    ^
IndentationError: expected an indented block after 'while' statement on line 1
>>>  while a < 10:
  File "<stdin>", line 1
    while a < 10:
IndentationError: unexpected indent
>>> # Fibonacci series:
>>> ... # the sum of two elements defines the next
Ellipsis
>>> ... a, b = 0, 1
  File "<stdin>", line 1
    ... a, b = 0, 1
        ^
SyntaxError: invalid syntax
>>>  while a < 10:
  File "<stdin>", line 1
    while a < 10:
IndentationError: unexpected indent
>>>  while a < 10:
  File "<stdin>", line 1
    while a < 10:
IndentationError: unexpected indent
>>> # Fibonacci series:
>>> # the sum of two elements defines the next
>>> a, b = 0, 1
>>> while a < 10:
... print(a)
  File "<stdin>", line 2
    print(a)
    ^
IndentationError: expected an indented block after 'while' statement on line 1
>>> a, b = b, a+b
>>> ...
Ellipsis
>>> 0
0
>>> 1
1
>>> 1
1
>>> 2
2
>>> 3
3
>>> 5
5
>>> 8
8
>>> # Fibonacci series:
>>> # the sum of two elements defines the next
>>> a, b = 0, 1
>>> while a < 10:
...     print(a)
...      a, b = b, a+b
  File "<stdin>", line 3
    a, b = b, a+b
IndentationError: unexpected indent
>>> while a < 10:
...      print(a)
...     a, b = b, a+b
  File "<stdin>", line 3
    a, b = b, a+b
                 ^
IndentationError: unindent does not match any outer indentation level
>>> while a < 10:
...     print(a)
...     a, b = b, a+b
...
0
1
1
2
3
5
8
>>> i = 256*256
>>> print('The value of i is', i)
The value of i is 65536
>>> a, b = 0, 1
>>>  while a < 1000:
  File "<stdin>", line 1
    while a < 1000:
IndentationError: unexpected indent
>>> a, b = 0, 1
>>> while a < 1000:
...     print(a, end=',')
...     a, b = b, a+b
...
0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,>>>
>>>





















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Microsoft Windows [Version 10.0.22000.856]
(c) Microsoft Corporation. All rights reserved.

C:\Users\ASUS>python
Python 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> the_world_is_flat = True
>>> if the_world_is_flat:
... print("Be careful no to fall off!)
  File "<stdin>", line 2
    print("Be careful no to fall off!)
    ^
IndentationError: expected an indented block after 'if' statement on line 1
>>> if the_world_is_flat:
... print("Be careful not to fall off!")
  File "<stdin>", line 2
    print("Be careful not to fall off!")
    ^
IndentationError: expected an indented block after 'if' statement on line 1
>>> if the_world_is_flat:
...     print ("Be careful not to fall off!")
...
Be careful not to fall off!
>>> # this is the first command
>>> # this is the first commant
>>> spam = 1 # andthis is the second comment
>>> text = "# this is not a comment because it's inside quotes."
>>> print(spam)
1
>>> print(text)
# this is not a comment because it's inside quotes.
>>> 2 + 2
4
>>> 50 - 5*6
20
>>> (50-5*6)/4
5.0
>>> 8/5 # division always returns a floating point number
1.6
>>> 17/3 #classic division return a float
5.666666666666667
>>> 17//3 #floor division discards the fractional part
5
>>> 17%3 # the % operator returns the remainder of the division
2
>>> 5 * 3 + 2  # floored quotient * divisor + remainder
17
>>>  5 ** 2  # 5 squared
  File "<stdin>", line 1
    5 ** 2  # 5 squared
IndentationError: unexpected indent
>>> 5 ** 2  # 5 squared
25
>>> 2 ** 7  # 2 to the power of 7
128
>>> 4 * 3.75 - 1
14.0
>>> tax = 12.5 / 100
>>> price = 100.50
>>> price * tax
12.5625
>>> price + _
113.0625
>>> round(_, 2)
113.06
>>> 'spam eggs'  # single quotes
'spam eggs'
>>> 'doesn\'t'  # use \' to escape the single quote...
"doesn't"
>>>  '"Yes," they said.'
  File "<stdin>", line 1
    '"Yes," they said.'
IndentationError: unexpected indent
>>>  '\"Yes,\" they said.'
  File "<stdin>", line 1
    '\"Yes,\" they said.'
IndentationError: unexpected indent
>>> '"Yes," they said.
  File "<stdin>", line 1
    '"Yes," they said.
    ^
SyntaxError: unterminated string literal (detected at line 1)
>>> '"Yes," they said.'
'"Yes," they said.'
>>> "\"Yes,\" they said."
'"Yes," they said.'
>>> '"Isn\'t," they said.'
'"Isn\'t," they said.'
>>> '"Isn\'t," they said.'
'"Isn\'t," they said.'
>>> print('"Isn\'t," they said.')
"Isn't," they said.
>>> s = 'First line.\nSecond line.'  # \n means newline
>>> s  # without print(), \n is included in the output
'First line.\nSecond line.'
>>> print(s)  # with print(), \n produces a new line
First line.
Second line.
>>> print('C:\some\name')  # here \n means newline!
C:\some
ame
>>> print(r'C:\some\name')  # note the r before the quote
C:\some\name
>>> # 3 times 'un', followed by 'ium'
>>> 3 * 'un' + 'ium'
'unununium'
>>> 'Py' 'thon'
'Python'
>>> text = ('Put several strings within parentheses '
... 'to have them joined together.')
>>>  text
  File "<stdin>", line 1
    text
IndentationError: unexpected indent
>>> text
'Put several strings within parentheses to have them joined together.'
>>> prefix = 'Py'
>>> prefix 'thon'  # can't concatenate a variable and a string literal
  File "<stdin>", line 1
    prefix 'thon'  # can't concatenate a variable and a string literal
           ^^^^^^
SyntaxError: invalid syntax
>>> prefix + 'thon'
'Python'
>>> word = 'Python'
>>> word[0]  # character in position 0
'P'
>>> word[5]  # character in position 5
'n'
>>> word[-1]  # last character
'n'
>>> word[-2]  # second-last character
'o'
>>> word[-6]
'P'
>>> word[0:2]  # characters from position 0 (included) to 2 (excluded)
'Py'
>>> word[2:5]  # characters from position 2 (included) to 5 (excluded)
'tho'
>>> word[:2]   # character from the beginning to position 2 (excluded)
'Py'
>>> word[4:]   # characters from position 4 (included) to the end
'on'
>>> word[-2:]  # characters from the second-last (included) to the end
'on'
>>> word[:2] + word[2:]
'Python'
>>> word[:4] + word[4:]
'Python'
>>>  word[42]  # the word only has 6 characters
  File "<stdin>", line 1
    word[42]  # the word only has 6 characters
IndentationError: unexpected indent
>>> word[42]  # the word only has 6 characters
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> word[4:42]
'on'
>>> word[42:]
''
>>> word[0] = 'J'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> word[2:] = 'py'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> 'J' + word[1:]
'Jython'
>>> word[:2] + 'py'
'Pypy'
>>> s = 'supercalifragilisticexpialidocious'
>>> len(s)
34
>>> squares = [1, 4, 9, 16, 25]
>>> squares
[1, 4, 9, 16, 25]
>>> squares[0]  # indexing returns the item
1
>>> squares[-1]
25
>>> squares[-3:]  # slicing returns a new list
[9, 16, 25]
>>> squares[:]
[1, 4, 9, 16, 25]
>>> squares + [36, 49, 64, 81, 100]
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
>>> cubes = [1, 8, 27, 65, 125]  # something's wrong here
>>> >>> 4 ** 3  # the cube of 4 is 64, not 65!
  File "<stdin>", line 1
    >>> 4 ** 3  # the cube of 4 is 64, not 65!
    ^^
SyntaxError: invalid syntax
>>> cubes = [1, 8, 27, 65, 125]  # something's wrong here
>>> 4 ** 3  # the cube of 4 is 64, not 65!
64
>>>

C:\Users\ASUS>cubes[3] = 64  # replace the wrong valuecubes[3] = 64  # replace the wrong value
'cubes[3]' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>
C:\Users\ASUS>python
Python 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> cubes[3] = 64  # replace the wrong value
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cubes' is not defined
>>> cubes = [1, 8, 27, 65, 125]  # something's wrong here
>>> 4 ** 3  # the cube of 4 is 64, not 65!
64
>>> cubes[3] = 64  # replace the wrong value
>>> cubes
[1, 8, 27, 64, 125]
>>> cubes.append(216)  # add the cube of 6
>>> cubes.append(7 ** 3)  # and the cube of 7
>>> cubes
[1, 8, 27, 64, 125, 216, 343]
>>> letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g']
>>> letters
['a', 'b', 'c', 'd', 'e', 'f', 'g']
>>> # replace some values
>>> letters[2:5] = ['C', 'D', 'E']
>>> letters
['a', 'b', 'C', 'D', 'E', 'f', 'g']
>>> # now remove them
>>> letters[2:5] = []
>>> letters
['a', 'b', 'f', 'g']
>>> # clear the list by replacing all the elements with an empty list
>>> letters[:] = []
>>> letters
[]
>>> letters = ['a', 'b', 'c', 'd']
>>>
KeyboardInterrupt
>>> len(letters)
4
>>> a = ['a', 'b', 'c']
>>>  n = [1, 2, 3]
  File "<stdin>", line 1
    n = [1, 2, 3]
IndentationError: unexpected indent
>>>
KeyboardInterrupt
>>> x = [a, n]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'n' is not defined
>>> a = ['a', 'b', 'c']
>>> n = [1, 2, 3]
>>> x = [a, n]
>>> x
[['a', 'b', 'c'], [1, 2, 3]]
>>> x[0]
['a', 'b', 'c']
>>> x[0][1]
'b'
>>> # Fibonacci series:
>>> ... # the sum of two elements defines the next
Ellipsis
>>> ... a, b = 0, 1
  File "<stdin>", line 1
    ... a, b = 0, 1
        ^
SyntaxError: invalid syntax
>>> # Fibonacci series:
>>>
>>> while a < 10:
... print(a)
  File "<stdin>", line 2
    print(a)
    ^
IndentationError: expected an indented block after 'while' statement on line 1
>>>  while a < 10:
  File "<stdin>", line 1
    while a < 10:
IndentationError: unexpected indent
>>> # Fibonacci series:
>>> ... # the sum of two elements defines the next
Ellipsis
>>> ... a, b = 0, 1
  File "<stdin>", line 1
    ... a, b = 0, 1
        ^
SyntaxError: invalid syntax
>>>  while a < 10:
  File "<stdin>", line 1
    while a < 10:
IndentationError: unexpected indent
>>>  while a < 10:
  File "<stdin>", line 1
    while a < 10:
IndentationError: unexpected indent
>>> # Fibonacci series:
>>> # the sum of two elements defines the next
>>> a, b = 0, 1
>>> while a < 10:
... print(a)
  File "<stdin>", line 2
    print(a)
    ^
IndentationError: expected an indented block after 'while' statement on line 1
>>> a, b = b, a+b
>>> ...
Ellipsis
>>> 0
0
>>> 1
1
>>> 1
1
>>> 2
2
>>> 3
3
>>> 5
5
>>> 8
8
>>> # Fibonacci series:
>>> # the sum of two elements defines the next
>>> a, b = 0, 1
>>> while a < 10:
...     print(a)
...      a, b = b, a+b
  File "<stdin>", line 3
    a, b = b, a+b
IndentationError: unexpected indent
>>> while a < 10:
...      print(a)
...     a, b = b, a+b
  File "<stdin>", line 3
    a, b = b, a+b
                 ^
IndentationError: unindent does not match any outer indentation level
>>> while a < 10:
...     print(a)
...     a, b = b, a+b
...
0
1
1
2
3
5
8


>>> i = 256*256
>>> print('The value of i is', i)
The value of i is 65536
>>> a, b = 0, 1
>>>  while a < 1000:
  File "<stdin>", line 1
    while a < 1000:
IndentationError: unexpected indent
>>> a, b = 0, 1
>>> while a < 1000:
...     print(a, end=',')
...     a, b = b, a+b
...
0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,>>>
>>>

























